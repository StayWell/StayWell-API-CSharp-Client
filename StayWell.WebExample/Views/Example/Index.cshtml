@using StayWell.ServiceDefinitions.Content.Objects
@using StayWell.ServiceDefinitions.Mapping.Objects
@using StayWell.WebExample.Models

@model ContentWithRelationshipModel
@helper DisplaySideBarGroup(GroupedContentModel group)
{
    if (group.Items.Count > 0)
    {
        <div class="column">
            <a href="#" class="section-link">@group.Title<span class="right-button"><span class="glyphicon glyphicon-chevron-right"></span></span></a>
            <ul>
                @for (int i = 0; i < group.Items.Count && i < 5; i++)
                {
                    <li>
                        @{
                    string uri = group.Items[i].Uri;
                    if (string.IsNullOrEmpty(uri))
                    {
                        uri = "/Content/" + group.Items[i].BucketSlug + "/" + @group.Items[i].Slug;
                    }

                        }
                        <a href="@uri">
                            @if (!string.IsNullOrEmpty(group.Items[i].ImageUri))
                            {
                                <img src="@group.Items[i].ImageUri" />
                                <span class="media-icon">
                                    <span class="glyphicon glyphicon-play"></span>
                                </span>
                            }
                            <h3>@group.Items[i].Title</h3>
                        </a>
                    </li>
                }
            </ul>
        </div>
    }
}

@helper TrimAtWord(string textToTrim, int maxChars)
{
    if (!string.IsNullOrEmpty(textToTrim) && textToTrim.Length > maxChars)
    {
        int lastSpace = textToTrim.LastIndexOf(' ', maxChars);
        textToTrim = textToTrim.Substring(0, lastSpace) + "...";
    }
    @textToTrim
}
@helper ShowClientCallToAction()
{
    <div class="client-cta">
        If you or your child are experiencing Absence Seizures, search for a physician in our online directory, or call 1-800-HOSPITAL to talk to our experts.
    </div>
}
@{
    ViewBag.Title = Model.Article.Title;
}
<br />
<div class="row">
    <div class="col-sm-7 blog-main">
        @if (Model.Article.Type == ContentType.StreamingMedia)
        {
            <h2>@Model.Article.Title</h2>

            <div class="flowplayer is-splash" style="background-image: url(@Model.StreamingMedia.ImageUri);" data-key="$170954793413711,$103737256684481,$333970518248932,$220529912050272">
                <video id="Video-@Model.StreamingMedia.Slug" width="640" height="360">
                    @foreach (StreamingMediaFormatResponse format in Model.StreamingMedia.Formats)
                    {
                        <source src="@format.Uri" type="@format.MimeType" />
                    }
                    <track kind="captions" src="/Content/@Model.StreamingMedia.Bucket.Slug/@Model.StreamingMedia.Slug/Captions.dfxp.xml" srclang="en" label="English"></track> <!--Tracks need an ending tag thanks to IE9-->
                </video>
            </div>
        }
        else
        {
        <!-- Nav tabs -->
            if (!Model.Article.Segments[0].Body.Contains("<h2>" + Model.Article.Title + "</h2") && !Model.Article.Segments[0].Body.Contains("<h1>" + Model.Article.Title + "</h1"))
            {
                <h2>@Model.Article.Title</h2>
            }

            <div id="SingleExample" class="view-example">
                @for (int i = 0; i < Model.Article.Segments.Count; i++)
                {
                    ContentSegmentResponse segment = Model.Article.Segments[i];

                    string segmentName = segment.Name;
                    if (segment.CustomName != null) { segmentName = segment.CustomName; }

                    //No need to display segment title if it's the default segment.  Generally this  means
                    //the content is not segmented.
                    if (segment.Slug != "default")
                    { <h3>@segmentName</h3> }
                    @Html.Raw(segment.Body)
                    
                    if (@segment.Slug == "what-is-disease")
                    { 
                        @ShowClientCallToAction()
                    }
                }
            </div>
        <!-- Nav tabs -->
            <div id="TabbedExample" class="view-example">
                <ul class="nav nav-tabs" role="tablist">
                    @for (int i = 0; i < Model.Article.Segments.Count; i++)
                    {
                        ContentSegmentResponse segment = Model.Article.Segments[i];
                        string liClass = "";
                        if (i == 0) { liClass = "active"; }

                        <li role="presentation" class="@liClass"><a href="#@segment.Slug" aria-controls="@segment.Slug" role="tab" data-toggle="tab">@segment.Name</a></li>
                    }
                </ul>

                <!-- Tab panes -->
                <div class="tab-content">
                    @for (int i = 0; i < Model.Article.Segments.Count; i++)
                    {
                        ContentSegmentResponse segment = Model.Article.Segments[i];

                        string segmentName = segment.Name;
                        if (segment.CustomName != null) { segmentName = segment.CustomName; }

                        string paneClass = "tab-pane";
                        if (i == 0) { paneClass = "tab-pane active"; }

                        <div role="tabpanel" class="@paneClass" id="@segment.Slug">
                            <h3>@segmentName</h3>
                            @Html.Raw(segment.Body)

                            @if (segment.Slug == "what-is-disease")
                            {
                                @ShowClientCallToAction()
                            }
                        </div>
                    }
                </div>
            </div>
        <!-- /Tabbed View Version -->
        <!-- Accordion View Version -->
            <div id="AccordionExample" class="view-example">
                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    @for (int i = 0; i < Model.Article.Segments.Count; i++)
                    {
                        ContentSegmentResponse segment = Model.Article.Segments[i];

                        string segmentName = segment.Name;
                        if (segment.CustomName != null) { segmentName = segment.CustomName; }

                        <div class="panel  panel-default">
                            <div class="panel-heading" role="tab" id="Accordion-@segment.Slug">
                                <h4 class="panel-title">
                                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse-@segment.Slug" aria-expanded="false" aria-controls="collapse-@segment.Slug">
                                        @segmentName
                                    </a>
                                </h4>
                            </div>
                            <div id="collapse-@segment.Slug" class="panel-collapse collapse" role="tabpanel" aria-labelledby="Accordion-@segment.Slug">
                                <div class="panel-body">
                                    @Html.Raw(segment.Body)
                                    @if (segment.Slug == "what-is-disease")
                                    {
                                        @ShowClientCallToAction()
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <!-- /Accordion View Version -->
        }
        <!-- Source Information -->
        <div class="source-information">
            <ul>
                @if (Model.Article.OnlineMedicalReviewers != null)
                {
                    foreach (string medicalReviewer in Model.Article.OnlineMedicalReviewers)
                    {
                        <li><span class="label-head">Medical Reviewer:</span> @medicalReviewer</li>
                    }
                }
                @if (Model.Article.LastReviewedDate != null)
                {
                    <li><span class="label-head">Last Review Date:</span> @Model.Article.LastReviewedDate.Value.ToShortDateString()</li>}
                @if (Model.Article.DatePublished != null)
                {
                    <li><span class="label-head">Publish Date:</span> @Model.Article.DatePublished.Value.ToShortDateString()</li>}
                <li>@Model.Article.Copyright</li>
            </ul>
        </div>
        <!-- /Source Information-->
        <!-- Top Related Content -->
        @{
            //Grab all videos and sort descending by view count.
            //List<ContentReferenceModel> videos = Model.RelatedContent.SelectMany(c => c.Items).ToList().FindAll(c => c.Type == "StreamingMedia");
            List<ContentReferenceModel> topRelatedContent = Model.RelatedContent.SelectMany(c => c.Items).ToList();
            topRelatedContent = topRelatedContent.OrderByDescending(c => c.ViewCount).ToList();

            if (topRelatedContent.Count > 0)
            {
                <div class="sub-section">
                    <a href="#" class="section-link">Top Related Content (@topRelatedContent.Count)<span class="right-button"><span class="glyphicon glyphicon-chevron-right"></span></span></a>
                    <div class="row block-display">
                        @for (int i = 0; i < 6 && i < topRelatedContent.Count; i++)
                        {
                            <div class="panel col-xs-4 block-panel">
                                <div class="block-top">
                                    @{GroupedContentModel parentGroup = Model.RelatedContent.Where(c => c.Items.Any(a => a.Slug == topRelatedContent[i].Slug && a.BucketSlug == topRelatedContent[i].BucketSlug)).First();}
                                    @if (!string.IsNullOrEmpty(topRelatedContent[i].ImageUri))
                                    {
                                        <a href="/Content/@topRelatedContent[i].BucketSlug/@topRelatedContent[i].Slug" class="media-link">
                                            <h4>@parentGroup.Title</h4>
                                            <img alt="@topRelatedContent[i].Title" title="@topRelatedContent[i].Title" class="img-responsive" src="@topRelatedContent[i].ImageUri" style="display: block;"><span class="media-icon"><span class="glyphicon glyphicon-play"></span> @topRelatedContent[i].Duration</span>
                                        </a>
                                        <a href="/Content/@topRelatedContent[i].BucketSlug/@topRelatedContent[i].Slug">
                                            <h3 class="media-link-title">@topRelatedContent[i].Title</h3>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="/Content/@topRelatedContent[i].BucketSlug/@topRelatedContent[i].Slug">
                                            <h4>@parentGroup.Title</h4>
                                            <h3>@topRelatedContent[i].Title</h3>
                                            @TrimAtWord(topRelatedContent[i].Blurb, 140)
                                        </a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        <!-- /Top Related Content-->
        <div class="clearfix"></div>
    </div>
    <div class="col-sm-4 side-bar">

        <!-- This section is for demos only. -->
        <!-- Only display segmentation options if it's an article. -->
        @if (Model.Article.Type == ContentType.Article)
        {
            <div class="well">
                <h1>Demo Options</h1>
                
                <h2>Display Style:</h2>
                <div class="btn-group-sm" data-toggle="buttons">
                    <label class="btn btn-primary active">
                        <input type="radio" name="displayOptions" value="Single" autocomplete="off" checked> Single
                    </label>
                    <!-- If there is only one segment there is no need to show the multiple view options.-->
                    @if (Model.Article.Segments.Count > 1)
                    {
                        <label class="btn btn-primary">
                            <input type="radio" name="displayOptions" value="Tabbed" autocomplete="off"> Tabbed
                        </label>
                        <label class="btn btn-primary">
                            <input type="radio" name="displayOptions" value="Accordion" autocomplete="off"> Accordion
                        </label>
                    }
                </div>
                <h2>Show Client Call-to-Action Segment:</h2>
                <div class="btn-group-sm" data-toggle="buttons">
                    <label class="btn btn-primary active">
                        <input type="radio" name="insertClientCTA" value="hide" autocomplete="off" checked> Hide Client Segment
                    </label>
                    <label class="btn btn-primary">
                        <input type="radio" name="insertClientCTA" value="show" autocomplete="off"> Show Client Segment
                    </label>
                </div>

            </div>
        }

        @if (Model.RelatedContent.Count > 0)
        {
            foreach (GroupedContentModel relatedGroup in Model.RelatedContent)
            {
                @DisplaySideBarGroup(relatedGroup)
            }
        }
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#SingleExample").show();
        });

        $('input[name="displayOptions"]').change(function () {
            var value = $(this).val();
            $(".view-example").hide();
            $("#" + value + "Example").show();

        })

        $('input[name="insertClientCTA"]').change(function () {
            var value = $(this).val();
            if (value == "hide") $(".client-cta").fadeOut()
            else if (value == "show") $(".client-cta").fadeIn(750);
        })
    </script>
}
